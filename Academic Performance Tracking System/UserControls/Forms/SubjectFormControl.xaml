<UserControl x:Class="Academic_Performance_Tracking_System.UserControls.Forms.SubjectFormControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:Academic_Performance_Tracking_System.UserControls.Forms"
             xmlns:adonisUI="clr-namespace:AdonisUI;assembly=AdonisUI"
             xmlns:extensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
             xmlns:controls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
             xmlns:extended="clr-namespace:WpfExtendedControls;assembly=WpfExtendedControls"  
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="523" d:DesignWidth="782">

    <UserControl.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUI:Brushes.ForegroundBrush}}"/>
        </Style>

        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Height" Value="32"/>
            <Style.Resources>
                <Style TargetType="TextBox">
                    <Setter Property="Text" Value="Select an Item" />
                    <Setter Property="Foreground" Value="Gray"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                            <Setter Property="Text" Value="Select an Item"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="12.5"/>
        </Style>

        <Style TargetType="DatePicker" BasedOn="{StaticResource {x:Type DatePicker}}">
            <Setter Property="Height" Value="32"/>
            <Style.Resources>
                <Style TargetType="Calendar" BasedOn="{StaticResource {x:Type Calendar}}">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="300" />
                    <Setter Property="Width" Value="300" />
                </Style>

                <Style TargetType="Popup">
                    <Setter Property="MinWidth" Value="500" />
                    <Setter Property="MinHeight" Value="500" />
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="extended:TimePicker">
            <Setter Property="MinHeight" Value="35"/>
            <Setter Property="MinWidth" Value="160"/>
            <Setter Property="FontSize" Value="20"/>
            <Style.Resources>
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Setter Property="MinWidth" Value="40"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="IsReadOnly" Value="False"/>
                    <Setter Property="TextAlignment" Value="Center"/>

                    <!--Style.Triggers>
                    <Trigger Property="IsSelectionActive" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUI:Brushes.AccentBrush}}"/>
                    </Trigger>
                </Style.Triggers>-->
                </Style>

                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="MinWidth" Value="25"/>
                </Style>

                <Style TargetType="Control">
                    <Style.Resources>
                        <Style TargetType="ToolTip">
                            <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
                            <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
                        </Style>
                    </Style.Resources>
                </Style>

            </Style.Resources>
        </Style>

        <Style TargetType="UniformGrid">
            <Style.Resources>
                <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                    <Setter Property="FontSize" Value="13"/>
                    <Setter Property="FontWeight" Value="DemiBold"/>

                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static adonisUI:Brushes.AccentBrush}}"/>
                            <Setter Property="extensions:CornerRadiusExtension.CornerRadius" Value="6"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>
    </UserControl.Resources>
    
    <!--#endregion-->

    <Grid>
        <Border CornerRadius="12" Margin="5,15,5,25" Grid.Row="1" Grid.ColumnSpan="2">
            <GroupBox x:Name="DetailsFormGroupBox">
                <GroupBox.Header>
                    <DockPanel LastChildFill="False">
                        <TextBlock Text="SUBJECT DETAILS" FontWeight="DemiBold" FontSize="16" VerticalAlignment="Center"/>
                        <Button DockPanel.Dock="Right" Height="28" Style="{StaticResource GenericActionButton}" Background="{DynamicResource {x:Static adonisUI:Brushes.AccentBrush}}" Click="GoBackBtn_Click">
                            <TextBlock FontWeight="SemiBold">
                                <InlineUIContainer BaselineAlignment="Center">
                                    <iconPacks:PackIconMaterial Kind="ChevronLeftCircle" Height="12" Margin="0,1,0,0"/>
                                </InlineUIContainer>
                                <Run Text=" GO BACK"/>
                            </TextBlock>
                        </Button>
                    </DockPanel>
                </GroupBox.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="0.08*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <TextBlock FontWeight="DemiBold" Margin="0,10,0,5">
                    <InlineUIContainer BaselineAlignment="Center">
                        <iconPacks:PackIconMaterial Kind="Notebook" Height="12"/>
                    </InlineUIContainer>
                    <Run Text=" SEMESTER"/>
                        </TextBlock>
                        <ComboBox x:Name="SemesterField"/>

                        <Separator Margin="5,30,5,30"/>

                        <TextBlock FontWeight="DemiBold" Margin="0,0,0,5">
                            <InlineUIContainer BaselineAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="Tag" Height="12"/>
                            </InlineUIContainer>
                            <Run Text=" SUBJECT TITLE"/>
                        </TextBlock>
                        <TextBox x:Name="SubjectTitleField" extensions:WatermarkExtension.Watermark="Enter title"/>

                        <TextBlock FontWeight="DemiBold" Margin="0,20,0,5">
                            <InlineUIContainer BaselineAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="Identifier" Height="10"/>
                            </InlineUIContainer>
                            <Run Text=" SUBJECT CODE"/>
                        </TextBlock>
                        <TextBox x:Name="SubjectCodeField" extensions:WatermarkExtension.Watermark="Enter code"/>

                        <TextBlock FontWeight="DemiBold" Margin="0,20,0,5">
                            <InlineUIContainer BaselineAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="Numeric" Height="12"/>
                            </InlineUIContainer>
                            <Run Text=" UNITS"/>
                        </TextBlock>
                        <TextBox x:Name="UnitsField" extensions:WatermarkExtension.Watermark="Enter units"/>
                    </StackPanel>

                    <!-- Column 2 -->

                    <StackPanel Grid.Column="2">
                        <TextBlock FontWeight="DemiBold" Margin="0,10,0,5">
                            <InlineUIContainer BaselineAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="CalendarMultiselect" Height="13"/>
                            </InlineUIContainer>
                            <Run Text=" CLASS DAYS"/>
                        </TextBlock>

                        <UniformGrid Height="35" Columns="7" x:Name="DayBtnsGrid">
                            <ToggleButton x:Name="SundayBtn" Margin="0,0,5,0" Content="Sun"/>
                            <ToggleButton x:Name="MondayBtn" Margin="0,0,5,0" Content="Mon"/>
                            <ToggleButton x:Name="TuesdayBtn" Margin="0,0,5,0" Content="Tue"/>
                            <ToggleButton x:Name="WednesdayBtn" Margin="0,0,5,0" Content="Wed"/>
                            <ToggleButton x:Name="ThursdayBtn" Margin="0,0,5,0" Content="Thu"/>
                            <ToggleButton x:Name="FridayBtn" Margin="0,0,5,0" Content="Fri"/>
                            <ToggleButton x:Name="SaturdayBtn" Margin="0,0,5,0" Content="Sat"/>
                        </UniformGrid>


                        <Grid Margin="0,20,0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="0.15*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock FontWeight="DemiBold">
                                <InlineUIContainer BaselineAlignment="Center">
                                    <iconPacks:PackIconMaterial Kind="ClockPlus" Height="13"/>
                                </InlineUIContainer>
                                <Run Text=" START TIME"/>
                            </TextBlock>

                            <TextBlock FontWeight="DemiBold" Grid.Column="2">
                                <InlineUIContainer BaselineAlignment="Center">
                                    <iconPacks:PackIconMaterial Kind="ClockMinus" Height="13"/>
                                </InlineUIContainer>
                                <Run Text=" END TIME"/>
                            </TextBlock>
                        </Grid>

                        <Grid x:Name="DetailsFormTimePicker">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="0.15*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <!-- For now, this will do, but this definitely isn't what I'm looking for -->
                            <extended:TimePicker x:Name="StartTimeField" SelectedTime="7:00"
                                         ToolTip="Not very intuitive yes, I plan to change this to a more user-friendly time picker control like Google's floating Material Time Picker&#10;However, it's tough to hard code or create my own time picker control from scratch and while there's a library for that but is not a&#10;standalone one, so it's kinda not practical to import such package and use only 1 of its control. It takes up 10 Mb while this one is just about 500Kb,&#10;package name is 'WpfExtendedControls' licensed under the MIT License. WPF just does not have a built-in time picker which is a pain.&#10;&#10;Honestly this package is also not that hassle-free to deal with, I had to manually get the children of the time picker control just to implement the&#10;simple focusing or highlighting of the selected textbox (hour, mins or secs) in the backend logic as this behaviour is non-existent natively.&#10;&#10;I'll rewrite and change this in the future but this implementation will have to do for now." 
                                         ToolTipService.InitialShowDelay="100"/>
                            <extended:TimePicker x:Name="EndTimeField" Grid.Column="2" SelectedTime="8:00"
                                         ToolTip="Not very intuitive yes, I plan to change this to a more user-friendly time picker control like Google's floating Material Time Picker&#10;However, it's tough to hard code or create my own time picker control from scratch and while there's a library for that but is not a&#10;standalone one, so it's kinda not practical to import such package and use only 1 of its control. It takes up 10 Mb while this one is just about 500Kb,&#10;package name is 'WpfExtendedControls' licensed under the MIT License. WPF just does not have a built-in time picker which is a pain.&#10;&#10;Honestly this package is also not that hassle-free to deal with, I had to manually get the children of the time picker control just to implement the&#10;simple focusing or highlighting of the selected textbox (hour, mins or secs) in the backend logic as this behaviour is non-existent natively.&#10;&#10;I'll rewrite and change this in the future but this implementation will have to do for now." 
                                         ToolTipService.InitialShowDelay="100"/>
                        </Grid>

                        <TextBlock FontWeight="DemiBold" Margin="0,20,0,5">
                            <InlineUIContainer BaselineAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="OfficeBuildingMarker" Height="14"/>
                            </InlineUIContainer>
                            <Run Text=" ROOM"/>
                        </TextBlock>
                        <TextBox x:Name="RoomField" extensions:WatermarkExtension.Watermark="Enter room name/number"/>

                        <TextBlock FontWeight="DemiBold" Margin="0,20,0,5">
                            <InlineUIContainer BaselineAlignment="Center">
                                <iconPacks:PackIconMaterial Kind="AccountTie" Height="13"/>
                            </InlineUIContainer>
                            <Run Text=" INSTRUCTOR"/>
                        </TextBlock>
                        <TextBox x:Name="InstructorField" extensions:WatermarkExtension.Watermark="Enter instructor's proper name"/>

                        <Separator Margin="5,25,5,25"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>

                            <Button Height="28" Margin="10,0,10,0" Style="{StaticResource RedActionButton}" Background="#F44336" Click="ClearBtn_Click">
                            <TextBlock FontSize="14" FontWeight="SemiBold">
                                <InlineUIContainer BaselineAlignment="Center">
                                    <iconPacks:PackIconMaterial Kind="CloseCircleOutline" Height="14" Margin="0,1,0,0"/>
                                </InlineUIContainer>
                                <Run Text=" CLEAR"/>
                                </TextBlock>
                            </Button>

                            <Button Height="28" Grid.Column="1" Margin="10,0,10,0" HorizontalAlignment="Stretch" Style="{StaticResource GreenActionButton}" Background="#4CAF50" Click="SaveBtn_Click">
                                <TextBlock FontSize="14" FontWeight="SemiBold">
                                <InlineUIContainer BaselineAlignment="Center">
                                    <iconPacks:PackIconMaterial Kind="ContentSaveOutline" Height="13" Margin="0,1,0,0"/>
                                </InlineUIContainer>
                                <Run Text=" SAVE"/>
                                </TextBlock>
                            </Button>
                        </Grid>
                    </StackPanel>
                </Grid>
            </GroupBox>
        </Border>
    </Grid>
</UserControl>
